---

#         vncserver  [:display]  [-geometry  widthxheight]  [-depth depth] [-pix‐
#       elformat rgbNNN|bgrNNN] [-name desktop-name] [ -httpport int ] [ -base‐
#       httpport int ] [ -alwaysshared ] [ -nevershared ] [Xvnc-options...]
#
#       vncserver [ -clean ] -kill :display
#
#       vncserver -help
#
#       /usr/bin/vncserver

#    - name: Send Wall Message Starting VNC
#      shell: wall "Starting VNC Installation . . ."

#    - name: Remove MOTD
#      shell: rm /etc/motd

    - name: Create User List
      set_fact:
        Users:
          - {user: vagrant, screen: 1}
          - {user: instructor, screen: 2}
          - {user: student, screen: 3}
          - {user: sysadmin, screen: 4}
        APT_Packages:
          - xfce4
          - xfce4-goodies
          - tightvncserver
          - dos2unix

    - name: Update apt cache.
      apt:
        update_cache: True
      become: yes
      become_user: root

 #   - name: Make sure the current version of xfce4 is installed.
 #     apt:
 #       name: "{{ item }}"
 #       state: latest
 #     become: yes
 #     become_user: root
 #     with_items:
 #       - xfce4
 #       - xfce4-goodies
 #       - tightvncserver
 #       - dos2unix

    - name: Make sure the current version of tightvncserver is installed.
      apt:
        name: "{{ item }}"
        state: latest
      become: yes
      become_user: root
      with_items:
        - "{{ APT_Packages }}"

    - name: Create Users
      user:
        name: "{{ item.user }}"
        comment: "Sysadmin User"
      become: yes
      become_user: root
      with_items:
        "{{ Users }}"

    - name: Create a .vnc directory if it does not exist
      ansible.builtin.file:
        path: /home/{{ item.user }}/.vnc
        owner: "{{ item.user }}"
        group: "{{ item.user }}"
        state: directory
        mode: '0700'
      become: yes
      become_user: "{{ item.user }}"
      with_items:
        "{{ Users }}"

#    - name: Update set_vnc_passwd.sh
#      ansible.builtin.copy:
#        src: files/set_vnc_password.sh
#        dest: /home/vagrant/.vnc/set_vnc_password.sh
#        group: vagrant
#        owner: vagrant
#        mode: 0700

    - name: Update set_vnc_passwd.sh
      ansible.builtin.copy:
        src: files/set_vnc_password.sh
        dest: /usr/local/bin/set_vnc_password.sh
        group: root
        owner: root
        mode: 0777
      become: yes

#    - name: dos2unix
#      shell: dos2unix -u /home/vagrant/.vnc/set_vnc_password.sh

    - name: Set VNC Password
      shell: /usr/local/bin/set_vnc_password.sh "{{ item.user }}"
      ignore_errors: True
      become: yes
      become_user: "{{ item.user }}"
      with_items:
        "{{ Users }}"

#    - name: Start VNC Server
#      shell: vncserver

#    - name: Stop VNC Server
#      shell: vncserver  -kill :1

    - name: Update /home/{{ item.user }}/.vnc/xstartup
      ansible.builtin.copy:
        src: files/xstartup
        dest: /home/{{ item.user }}/.vnc/xstartup
        group: "{{ item.user }}"
        owner: "{{ item.user }}"
        mode: 0700
      with_items:
        "{{ Users }}"

    - name: Start VNC Server
      shell: vncserver ":{{ item.screen }}"
      become: yes
      become_user: "{{ item.user }}"
      ignore_errors: True
      with_items:
        - "{{ Users }}"

    - name: Setup CRON at Reboot
      ansible.builtin.cron:
        name: "Do updates and restart VNC"
        special_time: reboot
        job: "bash /testscripts/bin/ansible.sh | tee -a /tmp/setup.log"

#    - name: Send Wall Message MOTD
#      shell: wall "VNC Installation is Complete"

 #   - name: Restart mysqld service
 #     ansible.builtin.service:
 #       name: mysql
 #       enabled: True
 #       state: restarted

#    - name: MySQL Workbench
#      community.general.snap:
#        name:
#          - mysql-workbench-community

#    - name: Change the authentication plugin of MySQL root user to mysql_native_password
#      shell: mysql -u root -e 'UPDATE mysql.user SET plugin="mysql_native_password" WHERE user="root" AND host="localhost"'
#    - name: Flush Privs
#      shell: mysql -u root -e 'FLUSH PRIVILEGES'

#    - name: Setup MySQL Root Account
#      mysql_user:
#        login_host: 'localhost'
#        login_user: 'root'
#        login_password: ''
#        name: 'root'
#        password: 'uci2020'
#        state: present

